# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # Runs replset
      - name: Run replica set
        run: |
            docker run --name mongodb -e MONGO_INITDB_DATABASE=unittest --detach mongo:5.0 mongod --replSet rs
            until docker exec --tty mongodb mongo 127.0.0.1:27017 --eval "db.serverStatus()"; do
            sleep 1
            done
            sudo docker exec --tty mongodb mongo 127.0.0.1:27017 --eval "rs.initiate({\"_id\":\"rs\",\"members\":[{\"_id\":0,\"host\":\"127.0.0.1:27017\" }]})"

      # Runs replset
      - name: Run replica set
        run: |
          ./vendor/bin/phpunit  --bootstrap vendor/autoload.php tests 
        env:
          MONGO_HOST: '127.0.0.1'